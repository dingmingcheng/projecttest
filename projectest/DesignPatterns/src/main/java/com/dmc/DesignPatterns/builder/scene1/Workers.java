package com.dmc.DesignPatterns.builder.scene1;

import java.lang.reflect.MalformedParameterizedTypeException;
import java.util.HashMap;
import java.util.Map;

public class Workers {
    private Builder builder;

    public Workers(Builder builder) {
        this.builder = builder;
    }

    public House build() {
        builder.buildHeight();
        builder.buildLength();
        builder.buildWidth();
        builder.buildPrice();
        return builder.getHouse();
    }

    public static void main(String[] args) {
        String t = "86\n"
            + "126\n"
            + "126\n"
            + "115\n"
            + "32\n"
            + "121\n"
            + "126\n"
            + "113\n"
            + "59\n"
            + "32\n"
            + "8\n"
            + "126\n"
            + "4\n"
            + "32\n"
            + "2\n"
            + "126\n"
            + "123\n"
            + "5\n"
            + "116\n"
            + "115\n"
            + "32\n"
            + "126\n"
            + "125\n"
            + "116\n"
            + "32\n"
            + "124\n"
            + "126\n"
            + "1\n"
            + "116\n"
            + "32\n"
            + "114\n"
            + "119\n"
            + "112\n"
            + "123\n"
            + "123\n"
            + "116\n"
            + "125\n"
            + "118\n"
            + "116\n"
            + "32\n"
            + "120\n"
            + "125\n"
            + "32\n"
            + "8\n"
            + "126\n"
            + "4\n"
            + "1\n"
            + "32\n"
            + "121\n"
            + "126\n"
            + "4\n"
            + "1\n"
            + "125\n"
            + "116\n"
            + "8\n"
            + "61\n"
            + "32\n"
            + "99\n"
            + "119\n"
            + "120\n"
            + "2\n"
            + "32\n"
            + "126\n"
            + "125\n"
            + "116\n"
            + "32\n"
            + "6\n"
            + "112\n"
            + "2\n"
            + "32\n"
            + "117\n"
            + "112\n"
            + "120\n"
            + "1\n"
            + "123\n"
            + "8\n"
            + "32\n"
            + "116\n"
            + "112\n"
            + "2\n"
            + "8\n"
            + "32\n"
            + "3\n"
            + "126\n"
            + "32\n"
            + "114\n"
            + "1\n"
            + "112\n"
            + "114\n"
            + "122\n"
            + "61\n"
            + "32\n"
            + "102\n"
            + "112\n"
            + "2\n"
            + "125\n"
            + "54\n"
            + "3\n"
            + "32\n"
            + "120\n"
            + "3\n"
            + "78\n"
            + "32\n"
            + "64\n"
            + "65\n"
            + "71\n"
            + "32\n"
            + "122\n"
            + "116\n"
            + "8\n"
            + "2\n"
            + "32\n"
            + "120\n"
            + "2\n"
            + "32\n"
            + "112\n"
            + "32\n"
            + "0\n"
            + "4\n"
            + "120\n"
            + "3\n"
            + "116\n"
            + "32\n"
            + "2\n"
            + "124\n"
            + "112\n"
            + "123\n"
            + "123\n"
            + "32\n"
            + "122\n"
            + "116\n"
            + "8\n"
            + "2\n"
            + "127\n"
            + "112\n"
            + "114\n"
            + "116\n"
            + "59\n"
            + "32\n"
            + "2\n"
            + "126\n"
            + "32\n"
            + "120\n"
            + "3\n"
            + "32\n"
            + "2\n"
            + "119\n"
            + "126\n"
            + "4\n"
            + "123\n"
            + "115\n"
            + "125\n"
            + "54\n"
            + "3\n"
            + "32\n"
            + "119\n"
            + "112\n"
            + "5\n"
            + "116\n"
            + "32\n"
            + "3\n"
            + "112\n"
            + "122\n"
            + "116\n"
            + "125\n"
            + "32\n"
            + "8\n"
            + "126\n"
            + "4\n"
            + "32\n"
            + "3\n"
            + "126\n"
            + "126\n"
            + "32\n"
            + "123\n"
            + "126\n"
            + "125\n"
            + "118\n"
            + "32\n"
            + "3\n"
            + "126\n"
            + "32\n"
            + "115\n"
            + "116\n"
            + "114\n"
            + "1\n"
            + "8\n"
            + "127\n"
            + "3\n"
            + "32\n"
            + "3\n"
            + "119\n"
            + "120\n"
            + "2\n"
            + "32\n"
            + "124\n"
            + "116\n"
            + "2\n"
            + "2\n"
            + "112\n"
            + "118\n"
            + "116\n"
            + "61\n"
            + "32\n"
            + "102\n"
            + "116\n"
            + "123\n"
            + "123\n"
            + "32\n"
            + "115\n"
            + "126\n"
            + "125\n"
            + "116\n"
            + "59\n"
            + "32\n"
            + "8\n"
            + "126\n"
            + "4\n"
            + "1\n"
            + "32\n"
            + "2\n"
            + "126\n"
            + "123\n"
            + "4\n"
            + "3\n"
            + "120\n"
            + "126\n"
            + "125\n"
            + "32\n"
            + "120\n"
            + "2\n"
            + "32\n"
            + "127\n"
            + "115\n"
            + "120\n"
            + "118\n"
            + "114\n"
            + "116\n"
            + "2\n"
            + "125\n"
            + "118\n"
            + "116\n"
            + "127\n"
            + "125\n"
            + "61\n";
        String[] z = t.split("\n");
        Map<String, Integer> m = new HashMap<>();
        for (String y : z) {
            if (m.get(y) == null) {
                m.put(y, 1);
            } else {
                m.put(y, m.get(y) + 1);
            }
        }
        long ans = m.entrySet().stream().peek(entry -> {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }).count();
        System.out.println(ans);
    }
}
